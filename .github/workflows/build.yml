name: Build

on: [ push, pull_request ]

jobs:

  dump-contexts:
    runs-on: ubuntu-latest
    steps:
      - name: Dump context "GitHub"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python_version: [ '3.x' ]
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch pre-commit coverage
          hatch env create
      - name: Lint and typecheck
        run: |
          hatch run lint:all
      - name: Run Tests with coverage analysis
        run: |
          hatch test --cover
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  build-distribution:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install hatch pre-commit
      - name: Build with Hatch
        run: |
          hatch build
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  build-publish-testpypi:
    runs-on: ubuntu-latest
    needs: build-distribution
    environment:
      name: pypi-test
      url: https://pypi.org/project/p{{ github.event.repository.name }}
    permissions:
      id-token: write
    # if: startsWith(github.ref, 'refs/tags/')
    # if: startsWith(github.ref, 'refs/heads/main')
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          repository-url: https://test.pypi.org/legacy/
          # skip-existing: true
          # user: __token__
          # password: ${{ secrets.TEST_PYPI_SECRECT }}

  build-publish-pypi:
    runs-on: ubuntu-latest
    needs: [ build-distribution, build-publish-testpypi ]
    environment:
      name: pypi
      url: https://pypi.org/project/p{{ github.event.repository.name }}
    permissions:
      id-token: write
    # if: startsWith(github.ref, 'refs/tags/')
    # if: startsWith(github.ref, 'refs/heads/main')
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish ðŸ“¦ to PyPI
        # if: startsWith(github.ref, 'refs/heads/main')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/

          # user: __token__
          # password: ${{ secrets.PYPI_SECRECT }}
