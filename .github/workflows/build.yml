name: Build

on: [push, pull_request]

jobs:

  dump-contexts:
    runs-on: ubuntu-latest
    steps:
      - name: Dump context "GitHub"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump context "vars"
        env:
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: echo "$VARS_CONTEXT"
      - name: Dump context "Job"
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python_version: ['3.9']
    steps:
      - name: Dump context "Job"
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch pre-commit coverage
          hatch env create
      - name: Lint and typecheck
        run: |
          hatch run lint:all
      - name: Run Tests with coverage analysis
        run: |
          hatch test --cover
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  build-release:
    runs-on: ubuntu-latest
    environment: release
    needs: build-test
    if: startsWith(github.ref, 'refs/heads/main')
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Dump context "Job"
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install hatch pre-commit
      - name: Build
        run: |
          hatch build
      - name: Publish ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.TEST_PYPI_SECRECT }}
          packages-dir: dist/
          repository-url: https://test.pypi.org/legacy/
      - name: Publish ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_SECRECT }}
          packages-dir: dist/
